/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.testService.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the TestUser service. Represents a row in the &quot;liferay_db_TestUser&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.testService.model.impl.TestUserModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.testService.model.impl.TestUserImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TestUser
 * @generated
 */
@ProviderType
public interface TestUserModel extends BaseModel<TestUser> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a test user model instance should use the {@link TestUser} interface instead.
	 */

	/**
	 * Returns the primary key of this test user.
	 *
	 * @return the primary key of this test user
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this test user.
	 *
	 * @param primaryKey the primary key of this test user
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this test user.
	 *
	 * @return the uuid of this test user
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this test user.
	 *
	 * @param uuid the uuid of this test user
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the custom user ID of this test user.
	 *
	 * @return the custom user ID of this test user
	 */
	public long getCustomUserId();

	/**
	 * Sets the custom user ID of this test user.
	 *
	 * @param customUserId the custom user ID of this test user
	 */
	public void setCustomUserId(long customUserId);

	/**
	 * Returns the custom user uuid of this test user.
	 *
	 * @return the custom user uuid of this test user
	 */
	public String getCustomUserUuid();

	/**
	 * Sets the custom user uuid of this test user.
	 *
	 * @param customUserUuid the custom user uuid of this test user
	 */
	public void setCustomUserUuid(String customUserUuid);

	/**
	 * Returns the name of this test user.
	 *
	 * @return the name of this test user
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this test user.
	 *
	 * @param name the name of this test user
	 */
	public void setName(String name);

	/**
	 * Returns the mail of this test user.
	 *
	 * @return the mail of this test user
	 */
	@AutoEscape
	public String getMail();

	/**
	 * Sets the mail of this test user.
	 *
	 * @param mail the mail of this test user
	 */
	public void setMail(String mail);

	/**
	 * Returns the message of this test user.
	 *
	 * @return the message of this test user
	 */
	@AutoEscape
	public String getMessage();

	/**
	 * Sets the message of this test user.
	 *
	 * @param message the message of this test user
	 */
	public void setMessage(String message);

}